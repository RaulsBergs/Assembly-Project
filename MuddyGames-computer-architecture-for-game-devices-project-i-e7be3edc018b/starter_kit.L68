00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 25/02/2021 09:34:16

00000000                             1  *-------------------------------------------------------
00000000                             2  * Starting memory address for the programme $1000
00000000                             3  *-------------------------------------------------------
00000000                             4      
00001000                             5      org $1000
00001000                             6  
00001000                             7  *-------------------------------------------------------
00001000                             8  *Choose to be a Plumber or a Rabbit 
00001000                             9  *-------------------------------------------------------
00001000                            10  
00001000                            11  *-------------------------------------------------------
00001000                            12  *Validation values to be used, modify as needed
00001000                            13  *Add additional validation values as required
00001000                            14  *-------------------------------------------------------
00001000  =00000000                 15  exit        EQU 0      used to exit assembly program
00001000  =00000001                 16  min_potions EQU 1      min number of potions
00001000  =00000009                 17  max_potions EQU 9      max number of potions
00001000  =00000001                 18  min_weapons EQU 1      min weapons
00001000  =00000003                 19  max_weapons EQU 3      max weapons
00001000  =00000005                 20  win_point   EQU 5      points accumilated on win
00001000  =00000008                 21  lose_point  EQU 8      points deducted on a loss
00001000                            22  
00001000  =00000064                 23  mine_loc    EQU 100    used below for some simple collision detection using CMP
00001000                            24                         * example for a hit
00001000                            25  
00001000                            26  
00001000                            27  *Start of Game
00001000                            28  start:
00001000  11FC 0064 4000            29      move.b  #100,$4000 put score/health in memory location $4000
00001006  47F8 4000                 30      lea     $4000,A3   assign address A3 to that memory location
0000100A                            31  
0000100A                            32  
0000100A  6100 1FFE                 33      bsr     welcome    branch to the welcome subroutine
0000100E  6100 2010                 34      bsr     input      branch to the input subroutine
00001012  6100 1FEC                 35      bsr     game       branch to the game subroutine
00001016                            36  *Game loop
00003000                            37      org     $3000      the rest of the program is to be located from 3000 onwards
00003000                            38  
00003000                            39  *-------------------------------------------------------
00003000                            40  *-------------------Game Subroutine---------------------
00003000                            41  *-------------------------------------------------------
00003000                            42  game:
00003000  6100 0028                 43      bsr     gameloop   branch to gameloop subroutine
00003004  4E75                      44      rts                return from game: subroutine
00003006                            45            
00003006                            46  end:
00003006  FFFF FFFF                 47      simhalt
0000300A                            48  
0000300A                            49  *-------------------------------------------------------
0000300A                            50  *-------------------Welcome Subroutine------------------
0000300A                            51  *-------------------------------------------------------
0000300A                            52  welcome:
0000300A  6100 017E                 53      bsr     endl            branch to endl subroutine
0000300E  43F9 000031A3             54      lea     welcome_msg,A1  assign message to address register A1
00003014  103C 000E                 55      move.b  #14,D0          move literal 14 to DO
00003018  4E4F                      56      trap    #15             trap and interpret value in D0
0000301A  6100 016E                 57      bsr     endl            branch to endl subroutine
0000301E  4E75                      58      rts                     return from welcome: subroutine
00003020                            59  
00003020                            60  *-------------------------------------------------------
00003020                            61  *---------Gameplay Input Values Subroutine--------------
00003020                            62  *-------------------------------------------------------    
00003020                            63  input:
00003020  6100 0066                 64      bsr     potions         branch to potion input subroutine
00003024  6100 007C                 65      bsr     weapons         branch to weaponss input subroutine
00003028  4E75                      66      rts
0000302A                            67  
0000302A                            68  *-------------------------------------------------------
0000302A                            69  *----------------Gameloop (main loop)-------------------
0000302A                            70  *------------------------------------------------------- 
0000302A                            71  gameloop:
0000302A  6100 0028                 72      bsr     update          branch to update game subroutine 
0000302E  6100 012C                 73      bsr     clear_screen    clears the screen         
00003032  6100 003A                 74      bsr     draw            branch to draw screen subroutine
00003036  6100 0124                 75      bsr     clear_screen    clears the screen
0000303A  6100 0080                 76      bsr     gameplay        branch to gameplay subroutine
0000303E  6100 011C                 77      bsr     clear_screen    clears the screen
00003042  6100 009C                 78      bsr     hud             branch to display HUD subroutine
00003046  6100 0114                 79      bsr     clear_screen    clears the screen
0000304A  6100 011C                 80      bsr     replay          branch to replay game subroutine
0000304E  6100 010C                 81      bsr     clear_screen    clears the screen
00003052  4E75                      82      rts                     return from gameloop: subroutine
00003054                            83  
00003054                            84  *-------------------------------------------------------
00003054                            85  *----------------Update Quest Progress------------------
00003054                            86  *  Complete Quest
00003054                            87  *------------------------------------------------------- 
00003054                            88  update:
00003054  6100 0134                 89      bsr     endl            print a CR and LF
00003058  6100 00E4                 90      bsr     decorate        decorate with dots using a loop
0000305C  43F9 000032EA             91      lea     update_msg,A1   
00003062  103C 000E                 92      move.b  #14,D0
00003066  4E4F                      93      trap    #15
00003068  6100 00D4                 94      bsr     decorate
0000306C  4E75                      95      rts
0000306E                            96  *-------------------------------------------------------
0000306E                            97  *-----------------Draw Quest Updates--------------------
0000306E                            98  * Draw the game progress information, status regarding
0000306E                            99  * quest
0000306E                           100  *------------------------------------------------------- 
0000306E                           101  draw:
0000306E  6100 011A                102      bsr     endl
00003072  6100 00CA                103      bsr     decorate
00003076  43F9 000032FC            104      lea     draw_msg,A1
0000307C  103C 000E                105      move.b  #14,D0
00003080  4E4F                     106      trap    #15
00003082  6100 00BA                107      bsr     decorate
00003086  4E75                     108      rts
00003088                           109  
00003088                           110  *-------------------------------------------------------
00003088                           111  *--------------------Potions Inventory---------------------
00003088                           112  * Number of potions to be used in a Quest 
00003088                           113  *------------------------------------------------------- 
00003088                           114  potions:
00003088  6100 0100                115      bsr     endl
0000308C  6100 00B0                116      bsr     decorate
00003090  43F9 00003257            117      lea     potions_msg,A1
00003096  103C 000E                118      move.b  #14,D0
0000309A  4E4F                     119      trap    #15
0000309C  6100 00A0                120      bsr     decorate
000030A0  4E75                     121      rts
000030A2                           122  
000030A2                           123  *-------------------------------------------------------
000030A2                           124  *-------------------------Weapons-----------------------
000030A2                           125  * Number of weapons
000030A2                           126  *-------------------------------------------------------   
000030A2                           127  weapons:
000030A2  6100 00E6                128      bsr     endl
000030A6  6100 0096                129      bsr     decorate
000030AA  43F9 0000326C            130      lea     weapons_msg,A1
000030B0  103C 000E                131      move.b  #14,D0
000030B4  4E4F                     132      trap    #15
000030B6  6100 0086                133      bsr     decorate
000030BA  4E75                     134      rts
000030BC                           135  
000030BC                           136  *-------------------------------------------------------
000030BC                           137  *---Game Play (Quest Progress)--------------------------
000030BC                           138  *------------------------------------------------------- 
000030BC                           139  gameplay:
000030BC  6100 00CC                140      bsr     endl
000030C0  6100 007C                141      bsr     decorate
000030C4  43F9 000032DE            142      lea     gameplay_msg,A1
000030CA  103C 000E                143      move.b  #14,D0
000030CE  4E4F                     144      trap    #15
000030D0  103C 0004                145      move.b  #4,D0
000030D4  4E4F                     146      trap    #15
000030D6  6100 0066                147      bsr     decorate
000030DA  6100 0026                148      bsr     collision
000030DE  4E75                     149      rts
000030E0                           150  
000030E0                           151  *-------------------------------------------------------
000030E0                           152  *-----------------Heads Up Display (Score)--------------
000030E0                           153  * Retrieves the score from memory location
000030E0                           154  *-------------------------------------------------------   
000030E0                           155  hud:
000030E0                           156  
000030E0  6100 00A8                157      bsr     endl
000030E4  6100 0058                158      bsr     decorate
000030E8  43F9 00003348            159      lea     hud_msg,A1
000030EE  103C 000E                160      move.b  #14,D0
000030F2  4E4F                     161      trap    #15
000030F4  1213                     162      move.b  (A3),D1     retrieve the value A3 point to and move to D1
000030F6  103C 0003                163      move.b  #3,D0       move literal 3 to D0
000030FA  4E4F                     164      trap    #15         intrepret value in D0, which 3 which displays D1
000030FC  6100 0040                165      bsr     decorate
00003100  4E75                     166      rts
00003102                           167  
00003102                           168  *-------------------------------------------------------
00003102                           169  *-----------------------Being Attacked------------------
00003102                           170  * This could be used for collision detection
00003102                           171  *-------------------------------------------------------
00003102                           172  collision:
00003102  123C 0064                173      move.b  #mine_loc,D1
00003106  B27C 0064                174      cmp     #100,D1 is( x == 100)?
0000310A  6600 0010                175      bne     collision_miss if x is equal to 100, then hit
0000310E                           176  collision_hit:
0000310E                           177      *hit
0000310E  43F9 0000330A            178      lea     hit_msg,A1
00003114  303C 000E                179      move    #14,D0
00003118  4E4F                     180      trap    #15
0000311A  4E75                     181      rts
0000311C                           182      
0000311C                           183  collision_miss:
0000311C                           184      *miss
0000311C  43F9 00003312            185      lea     miss_msg,A1
00003122  303C 000E                186      move    #14,D0
00003126  4E4F                     187      trap    #15
00003128  4E75                     188      rts
0000312A                           189  *-------------------------------------------------------
0000312A                           190  *--------------------Hello World Text-------------------
0000312A                           191  *-------------------------------------------------------
0000312A                           192  
0000312A                           193  
0000312A                           194  
0000312A                           195  
0000312A                           196  *-------------------------------------------------------
0000312A                           197  *--------------------------Loop-------------------------
0000312A                           198  *-------------------------------------------------------
0000312A                           199  loop:
0000312A  163C 0005                200      move.b  #5, D3 loop counter D3=5
0000312E                           201  next:
0000312E  43F9 00003318            202      lea     loop_msg,A1
00003134  103C 000E                203      move.b  #14,D0
00003138  4E4F                     204      trap    #15
0000313A  5343                     205      sub     #1,D3   decrement loop counter
0000313C  66F0                     206      bne     next    repeat until D0=0
0000313E                           207  
0000313E                           208  *-------------------------------------------------------
0000313E                           209  *------------------Screen Decoration--------------------
0000313E                           210  *-------------------------------------------------------
0000313E                           211  decorate:
0000313E  163C 003C                212      move.b  #60, D3
00003142  6100 0046                213      bsr     endl
00003146                           214  out:
00003146  43F9 00003318            215      lea     loop_msg,A1
0000314C  103C 000E                216      move.b  #14,D0
00003150  4E4F                     217      trap    #15
00003152  5343                     218      sub     #1,D3   decrement loop counter
00003154  66F0                     219      bne     out     repeat until D0=0
00003156  6100 0032                220      bsr     endl
0000315A  4E75                     221      rts
0000315C                           222      
0000315C                           223  clear_screen: 
0000315C  103C 000B                224      move.b  #11,D0      clear screen
00003160  323C FF00                225      move.w  #$ff00,D1
00003164  4E4F                     226      trap    #15
00003166  4E75                     227      rts
00003168                           228  *-------------------------------------------------------
00003168                           229  *------------------------Replay-------------------------
00003168                           230  *-------------------------------------------------------
00003168                           231  replay:
00003168  6100 0020                232      bsr     endl
0000316C  43F9 0000331A            233      lea     replay_msg,A1
00003172  103C 000E                234      move.b  #14,D0
00003176  4E4F                     235      trap    #15
00003178                           236      
00003178  103C 0004                237      move.b  #4,D0
0000317C  4E4F                     238      trap    #15
0000317E                           239  
0000317E  B27C 0000                240      cmp     #exit,D1
00003182  6700 FE82                241      beq     end         if SR Z register contains 1 beq => Branch Equals
00003186  6100 FEA2                242      bsr     gameloop
0000318A                           243  
0000318A                           244  endl:
0000318A  48E7 8040                245      movem.l D0/A1,-(A7)
0000318E  303C 000E                246      move    #14,D0
00003192  43F9 000031A0            247      lea     crlf,A1
00003198  4E4F                     248      trap    #15
0000319A  4CDF 0201                249      movem.l (A7)+,D0/A1
0000319E  4E75                     250      rts
000031A0                           251      
000031A0                           252  *-------------------------------------------------------
000031A0                           253  *-------------------Data Delarations--------------------
000031A0                           254  *-------------------------------------------------------
000031A0                           255  
000031A0= 0D 0A 00                 256  crlf:           dc.b    $0D,$0A,0
000031A3= 2A 2A 2A 2A 2A 2A ...    257  welcome_msg:    dc.b    '************************************************************'
000031DF= 0D 0A                    258                  dc.b    $0D,$0A
000031E1= 41 76 61 6C 6F 6E ...    259                  dc.b    'Avalon: The Legend Lives'
000031F9= 0D 0A                    260                  dc.b    $0D,$0A
000031FB= 2A 2A 2A 2A 2A 2A ...    261                  dc.b    '************************************************************'
00003237= 0D 0A 00                 262                  dc.b    $0D,$0A,0
0000323A= 50 6F 74 69 6F 6E ...    263  potion_msg:     dc.b    'Potion ....'
00003245= 0D 0A                    264                  dc.b    $0D,$0A
00003247= 45 6E 74 65 72 20 ...    265                  dc.b    'Enter Potion : ',0
00003257= 4E 75 6D 62 65 72 ...    266  potions_msg:    dc.b    'Number of potions : ',0
0000326C= 45 61 63 68 20 71 ...    267  weapons_msg:    dc.b    'Each quest need at least 2 Weapons'
0000328E= 0D 0A                    268                  dc.b    $0D,$0A
00003290= 6D 69 6E 69 6D 75 ...    269                  dc.b    'minimum requirement is 2 i.e. Sword x 1 and Speer x 1.'
000032C6= 0D 0A                    270                  dc.b    $0D,$0A
000032C8= 45 6E 74 65 72 20 ...    271                  dc.b    'Enter # of weapons : ',0
000032DE= 48 65 6C 6C 6F 20 ...    272  gameplay_msg:   dc.b    'Hello World',0
000032EA= 55 70 64 61 74 65 ...    273  update_msg:     dc.b    'Update Gameplay !',0
000032FC= 44 72 61 77 20 53 ...    274  draw_msg:       dc.b    'Draw Screen !',0
0000330A= 53 74 72 69 6B 65 ...    275  hit_msg:        dc.b    'Strike!',0
00003312= 4D 69 73 73 21 00        276  miss_msg:       dc.b    'Miss!',0
00003318= 2E 00                    277  loop_msg:       dc.b    '.',0
0000331A= 45 6E 74 65 72 20 ...    278  replay_msg:     dc.b    'Enter 0 to Quit any other number to replay : ',0
00003348= 53 63 6F 72 65 20 ...    279  hud_msg:        dc.b    'Score : ',0
00003351= 48 65 6C 6C 6F 20 ...    280  hello_world_msg dc.b    'Hello World',0
0000335D                           281  
0000335E                           282  health:     ds.w    1   Players Health
00003360                           283  score:      ds.w    1   Reserve space for score
00003362                           284  
00003362                           285      end start

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
CLEAR_SCREEN        315C
COLLISION           3102
COLLISION_HIT       310E
COLLISION_MISS      311C
CRLF                31A0
DECORATE            313E
DRAW                306E
DRAW_MSG            32FC
END                 3006
ENDL                318A
EXIT                0
GAME                3000
GAMELOOP            302A
GAMEPLAY            30BC
GAMEPLAY_MSG        32DE
HEALTH              335E
HELLO_WORLD_MSG     3351
HIT_MSG             330A
HUD                 30E0
HUD_MSG             3348
INPUT               3020
LOOP                312A
LOOP_MSG            3318
LOSE_POINT          8
MAX_POTIONS         9
MAX_WEAPONS         3
MINE_LOC            64
MIN_POTIONS         1
MIN_WEAPONS         1
MISS_MSG            3312
NEXT                312E
OUT                 3146
POTIONS             3088
POTIONS_MSG         3257
POTION_MSG          323A
REPLAY              3168
REPLAY_MSG          331A
SCORE               3360
START               1000
UPDATE              3054
UPDATE_MSG          32EA
WEAPONS             30A2
WEAPONS_MSG         326C
WELCOME             300A
WELCOME_MSG         31A3
WIN_POINT           5

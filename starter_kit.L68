00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 25/03/2021 09:40:14

00000000                             1  *-------------------------------------------------------
00000000                             2  * STARTING MEMORY ADDRESS FOR THE PROGRAMME $1000
00000000                             3  *-------------------------------------------------------
00000000                             4      
00001000                             5      ORG $1000
00001000                             6  
00001000                             7  *-------------------------------------------------------
00001000                             8  *VALIDATION VALUES TO BE USED, MODIFY AS NEEDED
00001000                             9  *ADD ADDITIONAL VALIDATION VALUES AS REQUIRED
00001000                            10  *-------------------------------------------------------
00001000  =00000000                 11  EXIT        EQU 0      USED TO EXIT ASSEMBLY PROGRAM
00001000  =00000001                 12  MIN_POTIONS EQU 1      MIN NUMBER OF POTIONS
00001000  =00000009                 13  MAX_POTIONS EQU 9      MAX NUMBER OF POTIONS
00001000  =00000001                 14  MIN_WEAPONS EQU 1      MIN WEAPONS
00001000  =00000003                 15  MAX_WEAPONS EQU 3      MAX WEAPONS
00001000  =00000005                 16  WIN_POINT   EQU 5      POINTS ACCUMILATED ON WIN
00001000  =00000008                 17  LOSE_POINT  EQU 8      POINTS DEDUCTED ON A LOSS
00001000                            18  
00001000  =00000064                 19  MINE_LOC    EQU 100    USED BELOW FOR SOME SIMPLE COLLISION DETECTION USING CMP
00001000                            20                         * EXAMPLE FOR A HIT
00001000                            21  
00001000                            22  *START OF GAME
00001000                            23  START:
00001000  11FC 0064 4003            24      MOVE.B  #100,$4003 PUT HEALTH IN MEMORY LOCATION $4000
00001006  47F8 4000                 25      LEA     $4000,A3   ASSIGN ADDRESS A3 TO THAT MEMORY LOCATION
0000100A                            26      
0000100A  11FC 0000 4010            27      MOVE.B  #0,$4010   PUT SCORE IN MEMORY LOCATION $4010
00001010  4DF8 4010                 28      LEA     $4010,A6   ASSIGN ADRESS A6 TO THAT MEMORY LOCATION
00001014                            29  
00001014  6100 1FF4                 30      BSR     WELCOME    BRANCH TO THE WELCOME SUBROUTINE
00001018  6100 1FE6                 31      BSR     GAME       BRANCH TO THE GAME SUBROUTINE
0000101C                            32  *GAME LOOP
00003000                            33      ORG     $3000      THE REST OF THE PROGRAM IS TO BE LOCATED FROM 3000 ONWARDS
00003000                            34  
00003000                            35  *-------------------------------------------------------
00003000                            36  *-------------------GAME SUBROUTINE---------------------
00003000                            37  *-------------------------------------------------------
00003000                            38  GAME:
00003000  6100 0056                 39      BSR     GAMELOOP   BRANCH TO GAMELOOP SUBROUTINE
00003004  4E75                      40      RTS                RETURN FROM GAME: SUBROUTINE
00003006                            41            
00003006                            42  END:
00003006  FFFF FFFF                 43      SIMHALT
0000300A                            44  
0000300A                            45  *-------------------------------------------------------
0000300A                            46  *-------------------WELCOME SUBROUTINE------------------
0000300A                            47  *-------------------------------------------------------
0000300A                            48  WELCOME:
0000300A  6100 0366                 49      BSR     ENDL            BRANCH TO ENDL SUBROUTINE
0000300E  43F9 000033BF             50      LEA     WELCOME_MSG,A1  ASSIGN MESSAGE TO ADDRESS REGISTER A1
00003014  103C 000E                 51      MOVE.B  #14,D0          MOVE LITERAL 14 TO DO
00003018  4E4F                      52      TRAP    #15             TRAP AND INTERPRET VALUE IN D0
0000301A  6100 0356                 53      BSR     ENDL            BRANCH TO ENDL SUBROUTINE
0000301E  6100 0032                 54      BSR     INPUT
00003022                            55      
00003022  13FC 0064 00003722        56      MOVE.B    #100,HEALTH     INITIALIZE HEALTH TO 100
0000302A  1839 00003722             57      MOVE.B    HEALTH,D4       PLACE HEALTH IN DATA REGISTER 4
00003030  2684                      58      MOVE.L    D4,(A3)         STORE DATA IN THE MEMORY LOCATION STORED IN ADRESS REGISTER 3
00003032                            59      
00003032  13FC 0000 00003726        60      MOVE.B    #0,SCORE        INITIALISE SCORE TO 0
0000303A  1C39 00003726             61      MOVE.B    SCORE,D6        PLACE SCORE IN DATA REGISTER 6
00003040  2C86                      62      MOVE.L    D6,(A6)         STORE DATA FROM D6 IN MEMORY LOCATION SPECIFIED IN A6
00003042                            63      
00003042  13FC 0096 00003724        64      MOVE.B  #150,RABBITHEALTH INITIALISE RABBIT HEALTH TO 150
0000304A  49F9 00003724             65      LEA     RABBITHEALTH,A4   LOAD EFFECTIVE ADRESS IN A4
00003050                            66      
00003050  4E75                      67      RTS                     RETURN FROM WELCOME: SUBROUTINE
00003052                            68  
00003052                            69  *-------------------------------------------------------
00003052                            70  *---------GAMEPLAY INPUT VALUES SUBROUTINE--------------
00003052                            71  *-------------------------------------------------------    
00003052                            72  INPUT:
00003052  6100 003E                 73      BSR     POTIONS         BRANCH TO POTION INPUT SUBROUTINE
00003056                            74  *    BSR     WEAPONS         BRANCH TO WEAPONS INPUT SUBROUTINE
00003056  4E75                      75      RTS
00003058                            76  
00003058                            77  *-------------------------------------------------------
00003058                            78  *----------------GAMELOOP (MAIN LOOP)-------------------
00003058                            79  *------------------------------------------------------- 
00003058                            80  GAMELOOP:
00003058  6100 0028                 81      BSR     UPDATE          BRANCH TO UPDATE GAME SUBROUTINE 
0000305C  6100 02AE                 82      BSR     CLEAR_SCREEN    CLEARS THE SCREEN         
00003060  6100 0026                 83      BSR     DRAW            BRANCH TO DRAW SCREEN SUBROUTINE
00003064  6100 02A6                 84      BSR     CLEAR_SCREEN    CLEARS THE SCREEN
00003068  6100 009C                 85      BSR     GAMEPLAY        BRANCH TO GAMEPLAY SUBROUTINE
0000306C  6100 029E                 86      BSR     CLEAR_SCREEN    CLEARS THE SCREEN
00003070  6100 017A                 87      BSR     HUD             BRANCH TO DISPLAY HUD SUBROUTINE
00003074  6100 0296                 88      BSR     CLEAR_SCREEN    CLEARS THE SCREEN
00003078  6100 02D6                 89      BSR     REPLAY          BRANCH TO REPLAY GAME SUBROUTINE
0000307C  6100 028E                 90      BSR     CLEAR_SCREEN    CLEARS THE SCREEN
00003080  4E75                      91      RTS                     RETURN FROM GAMELOOP: SUBROUTINE
00003082                            92  
00003082                            93  *-------------------------------------------------------
00003082                            94  *----------------UPDATE QUEST PROGRESS------------------
00003082                            95  *  COMPLETE QUEST
00003082                            96  *------------------------------------------------------- 
00003082                            97  UPDATE:
00003082  6100 02EE                 98      BSR     ENDL            PRINT A CR AND LF
00003086  4E75                      99      RTS
00003088                           100  *-------------------------------------------------------
00003088                           101  *-----------------DRAW QUEST UPDATES--------------------
00003088                           102  * DRAW THE GAME PROGRESS INFORMATION, STATUS REGARDING
00003088                           103  * QUEST
00003088                           104  *------------------------------------------------------- 
00003088                           105  DRAW:
00003088  6100 02E8                106      BSR     ENDL
0000308C  6100 0260                107      BSR     DECORATE
00003090  4E75                     108      RTS
00003092                           109  
00003092                           110  *--------------------------------------------------------
00003092                           111  *--------------------POTIONS INVENTORY-------------------
00003092                           112  * NUMBER OF POTIONS TO BE USED IN A QUEST 
00003092                           113  *--------------------------------------------------------
00003092                           114  POTIONS:
00003092  6100 02DE                115      BSR     ENDL
00003096  6100 0256                116      BSR     DECORATE
0000309A  43F9 00003482            117      LEA     POTIONS_MSG,A1      LOAD EFFECTIVE ADDRESS IN A1
000030A0  103C 000E                118      MOVE.B  #14,D0              DISPLAY STRING TRAP FUNC
000030A4  4E4F                     119      TRAP    #15                 
000030A6  103C 0004                120      MOVE.B  #4,D0               ASK FOR NUMBER INPUT TRAP FUNC
000030AA  4E4F                     121      TRAP    #15                 
000030AC                           122      
000030AC  B27C 0001                123      CMP     #MIN_POTIONS,D1     COMPARE 1 TO USER INPUT
000030B0  6DE0                     124      BLT     POTIONS             IF LESS THAN , GO BACK TO THE START OF THE BRANCH
000030B2                           125      
000030B2  B27C 0009                126      CMP     #MAX_POTIONS,D1     COMPARE 9 TO USER INPUT
000030B6  6EDA                     127      BGT     POTIONS             IF GREATER THAN , GO BACK TO THE START OF THE BRANCH
000030B8                           128      
000030B8  11C1 4500                129      MOVE.B  D1,$4500            MOVE AMOUNT OF POTIONS TO MEMORY LOCATION 4500
000030BC                           130      
000030BC  6100 0230                131      BSR     DECORATE
000030C0  4E75                     132      RTS
000030C2                           133  
000030C2                           134  NO_POTIONS_LEFT:
000030C2  6100 02AE                135      BSR     ENDL
000030C6                           136      
000030C6  6100 0250                137      BSR     TEXT_COLOUR_RED         CHANGE TEXT COLOUR TO RED
000030CA                           138  
000030CA  43F9 000036C0            139      LEA     NO_POTIONS_LEFT_MSG,A1  STORE ADDRESS OF STRING IN A1
000030D0  103C 000E                140      MOVE.B  #14,D0                  DISPLAY STRING TRAP FUNC
000030D4  4E4F                     141      TRAP    #15
000030D6                           142      
000030D6  6100 025C                143      BSR     TEXT_COLOUR_WHITE       CHANGE COLOUR BACK TO WHITE
000030DA                           144      
000030DA  103C 0004                145      MOVE.B  #4,D0                   ASKS FOR USER INPUT TO HALT THE SCREEN
000030DE  4E4F                     146      TRAP    #15
000030E0                           147      
000030E0  6100 FF76                148      BSR     GAMELOOP
000030E4                           149  AT_MAX_HEALTH:
000030E4  6100 028C                150      BSR     ENDL
000030E8                           151      
000030E8  6100 022E                152      BSR     TEXT_COLOUR_RED         CHANGE TEXT COLOUR TO RED
000030EC                           153  
000030EC  43F9 000036D0            154      LEA     MAX_HEALTH_MSG,A1       STORE ADRESS OF STRING IN ADDRESS REGISTER 1
000030F2  103C 000E                155      MOVE.B  #14,D0                  DISPLAY STRING TRAP FUNC
000030F6  4E4F                     156      TRAP    #15
000030F8                           157      
000030F8  6100 023A                158      BSR     TEXT_COLOUR_WHITE       CHANGE TEXT COLOUR BACK TO WHITE
000030FC                           159      
000030FC  103C 0004                160      MOVE.B  #4,D0                   ASKS FOR USER INPUT TO HALT THE SCREEN
00003100  4E4F                     161      TRAP    #15
00003102                           162      
00003102  6100 FF54                163      BSR     GAMELOOP
00003106                           164  *-------------------------------------------------------
00003106                           165  *---GAME PLAY (QUEST PROGRESS)--------------------------
00003106                           166  *------------------------------------------------------- 
00003106                           167  GAMEPLAY:
00003106  103C 0004                168      MOVE.B  #4,D0                   ASKS FOR USER INPUT TO HALT THE SCREEN
0000310A  4E4F                     169      TRAP    #15
0000310C                           170      
0000310C  6100 01FE                171      BSR     CLEAR_SCREEN
00003110                           172      
00003110  6100 0276                173      BSR     CHECK_IF_DEFEATED       CHECKS IF PLAYER AND RABBIT ARE ALIVE TO CONTINUE GAME
00003114                           174      
00003114  6100 00D6                175      BSR     HUD                     DISPLAY SCORE , HEALTH AND AMOUNT OF POTIONS
00003118                           176      
00003118  6100 01AC                177      BSR     RABBIT_HEALTH           DISPLAY RABBITS HEALTH
0000311C                           178      
0000311C  6100 0254                179      BSR     ENDL
00003120                           180      
00003120  43F9 0000352B            181      LEA     GAMEPLAY_MSG,A1         ASK FOR USER INPUT MESSAGE
00003126  103C 000E                182      MOVE.B  #14,D0                  DISPLAY STRING TRAP FUNC
0000312A  4E4F                     183      TRAP    #15
0000312C                           184      
0000312C  6100 0244                185      BSR     ENDL
00003130                           186      
00003130  103C 0004                187      MOVE.B  #4,D0                   GET USER INPUT TO KNOW WHICH ABILITY TO USE
00003134  4E4F                     188      TRAP    #15
00003136                           189      
00003136  B27C 0001                190      CMP     #1,D1                   CHECK IF INPUT IS LESS THAN 1
0000313A  6D00 00FE                191      BLT     ENTER_VALID_INPUT       IF NUMBER IS LESS THAN 1 THEN BRANCH
0000313E                           192      
0000313E  B27C 0003                193      CMP     #3,D1                   CHECK IF INPUT IS GREATER THAN 3
00003142  6E00 00F6                194      BGT     ENTER_VALID_INPUT       IF NUMBER IS GREATER THAN 3 THEN BRANCH
00003146                           195      
00003146  B27C 0001                196      CMP     #1,D1                   CHECK IF INPUT IS EQUAL TO 1
0000314A  6700 0014                197      BEQ     PLAYER_ATTACK           IF EQUAL , PLAYER WILL ATTACK
0000314E                           198      
0000314E  B27C 0002                199      CMP     #2,D1                   CHECK IF INPUT IS EQUAL TO 1
00003152  6700 0024                200      BEQ     PLAYER_SHIELD           IF EQUAL , PLAYER WILL USE THEIR SHIELD
00003156                           201      
00003156  B27C 0003                202      CMP     #3,D1                   CHECK IF INPUT IS EQUAL TO 1
0000315A  6700 0044                203      BEQ     PLAYER_USE_POTION       IF EQUAL , PLAYER WILL HEAL
0000315E                           204      
0000315E  4E75                     205      RTS
00003160                           206  
00003160                           207  
00003160                           208  PLAYER_ATTACK:
00003160  6100 018C                209      BSR     DECORATE
00003164                           210      
00003164  6100 00F4                211      BSR     COLLISION               CHECKS FOR COLLISION (DOESNT WORK AS IT WILL ALWAYS STRIKE)
00003168                           212      
00003168  6100 0208                213      BSR     ENDL
0000316C                           214      
0000316C  6100 0124                215      BSR     RABBIT_ATTACKS          RABBIT ATTACKS BACK
00003170                           216      
00003170  6100 017C                217      BSR     DECORATE
00003174                           218      
00003174  6190                     219      BSR     GAMEPLAY                GO BACK TO THE GAMEPLAY LOOP
00003176                           220      
00003176  4E75                     221      RTS
00003178                           222      
00003178                           223  PLAYER_SHIELD:
00003178  6100 0174                224      BSR     DECORATE
0000317C                           225      
0000317C  6100 01A8                226      BSR     TEXT_COLOUR_GREEN       CHANGE TEXT COLOUR TO GREEN
00003180                           227      
00003180  43F9 000035C7            228      LEA     SHIELD_MSG,A1           TELL USER THEY USED THE SHIELD ABILITY
00003186  103C 000E                229      MOVE.B  #14,D0
0000318A  4E4F                     230      TRAP    #15
0000318C                           231      
0000318C  6100 01A6                232      BSR     TEXT_COLOUR_WHITE       CHANGE TEXT COLOUR BACK TO WHITE
00003190                           233      
00003190  6100 01E0                234      BSR     ENDL
00003194                           235      
00003194  6100 011A                236      BSR     RABBIT_FAILS_ATTACK     TELL USER THE RABBIT FAILED TO ATTACK SINCE THEY HAD THEIR SHIELD ACTIVE THIS TURN
00003198                           237      
00003198  6100 0154                238      BSR     DECORATE                
0000319C                           239      
0000319C  6100 FF68                240      BSR     GAMEPLAY
000031A0                           241  
000031A0                           242  PLAYER_USE_POTION:
000031A0  1238 4500                243      MOVE.B  $4500,D1            STORE POTION AMOUNT VALUE IN DATA REGISTER 1
000031A4  B27C 0000                244      CMP     #0,D1               COMPARE 0 TO AMOUNT OF POTIONS LEFT
000031A8  6700 FF18                245      BEQ     NO_POTIONS_LEFT     IF 0 POTIONS LEFT , TELL USER THEY HAVE NO POTIONS LEFT
000031AC                           246      
000031AC  1238 4003                247      MOVE.B  $4003,D1            STORE HEALTH VALUE IN DATA REGISTER 1
000031B0  B27C 0063                248      CMP     #99,D1              COMPARE 99 TO HEALTH VALUE 
000031B4  6E00 FF2E                249      BGT     AT_MAX_HEALTH       IF HEALTH VALUE IS GREATER THEN 99 , TELL USER THEY ARE AT MAX HEALTH AND CANT USE POTION
000031B8                           250      
000031B8  6100 0134                251      BSR     DECORATE
000031BC                           252      
000031BC  6100 0168                253      BSR     TEXT_COLOUR_GREEN
000031C0                           254  
000031C0  43F9 000035CF            255      LEA     USE_POTION_MSG,A1   TELL USER THEY USED A POTION
000031C6  103C 000E                256      MOVE.B  #14,D0              
000031CA  4E4F                     257      TRAP    #15
000031CC                           258      
000031CC  6100 0166                259      BSR     TEXT_COLOUR_WHITE
000031D0                           260      
000031D0  5338 4500                261      SUB.B   #1,$4500            SUBTRACT 1 POTION FROM INVENTORY
000031D4                           262      
000031D4  0644 001E                263      ADD     #$1E,D4             ADD 30(1E IN HEX) TO HEALTH VALUE STORED IN D4
000031D8  11C4 4003                264      MOVE.B  D4,$4003            PLACE NEW HEALTH IN MEMORY ADRESS 4003
000031DC                           265      
000031DC  6100 0194                266      BSR     ENDL
000031E0                           267      
000031E0  6100 00B0                268      BSR     RABBIT_ATTACKS      PROCESS THE RABBITS ATTACK
000031E4                           269      
000031E4  6100 0108                270      BSR     DECORATE
000031E8                           271      
000031E8  6100 FF1C                272      BSR     GAMEPLAY
000031EC                           273  *-------------------------------------------------------
000031EC                           274  *-----------------HEADS UP DISPLAY (SCORE AND HEALTH)---
000031EC                           275  * RETRIEVES THE SCORE AND HEALTH FROM MEMORY LOCATION --
000031EC                           276  *-------------------------------------------------------   
000031EC                           277  HUD:
000031EC  43F9 00003639            278      LEA     HUD_MSG_SCORE,A1    STORE SCORE STRING IN A1
000031F2  103C 000E                279      MOVE.B  #14,D0              DISPLAY STRING
000031F6  4E4F                     280      TRAP    #15
000031F8                           281      
000031F8  4241                     282      CLR     D1
000031FA  1216                     283      MOVE.B  (A6),D1             GET HEALTH VALUE FROM MEMORY ADRESS STORED IN A6 AND STORE IN D1
000031FC  103C 0003                284      MOVE.B  #3,D0               MOVE LITERAL 3 TO D0
00003200  4E4F                     285      TRAP    #15                 INTREPRET VALUE IN D0, WHICH IS 3 SO DISPLAYS D1
00003202                           286      
00003202  6100 016E                287      BSR     ENDL
00003206                           288      
00003206  43F9 00003629            289      LEA     HUD_MSG_HEALTH,A1   STORE HEALTH STRING IN A1
0000320C  103C 000E                290      MOVE.B  #14,D0              DISPLAY STRING
00003210  4E4F                     291      TRAP    #15
00003212                           292      
00003212  2213                     293      MOVE.L  (A3),D1             RETRIEVE THE VALUE A3 POINT TO AND MOVE TO D1
00003214  103C 0003                294      MOVE.B  #3,D0               MOVE LITERAL 3 TO D0
00003218  4E4F                     295      TRAP    #15                 INTREPRET VALUE IN D0, WHICH IS 3 SO DISPLAYS D1
0000321A                           296      
0000321A  6100 0156                297      BSR     ENDL
0000321E                           298      
0000321E  43F9 000036B1            299      LEA     POTIONS_AMOUNT_MSG,A1 STORE POTIONS AMOUNT STRING IN A1
00003224  103C 000E                300      MOVE.B  #14,D0              DISPLAY STRING 
00003228  4E4F                     301      TRAP    #15
0000322A                           302      
0000322A  1238 4500                303      MOVE.B  $4500,D1            STORE POTION AMOUNT VALUE IN D1
0000322E  103C 0003                304      MOVE.B  #3,D0               MOVE LITERAL 3 TO D0
00003232  4E4F                     305      TRAP    #15                 INTREPRET VALUE IN D0, WHICH IS 3 SO DISPLAYS D1
00003234                           306      
00003234  6100 00B8                307      BSR     DECORATE
00003238  4E75                     308      RTS
0000323A                           309      
0000323A                           310      
0000323A                           311  *-------------------------------------------------------
0000323A                           312  *-----------------REQUEST VALID INPUT-------------------
0000323A                           313  * ASKS PLAYER TO ENTER A VALID NUMBER-------------------
0000323A                           314  *-------------------------------------------------------  
0000323A                           315  ENTER_VALID_INPUT:
0000323A  6100 00B2                316      BSR     DECORATE
0000323E                           317      
0000323E  6100 00D8                318      BSR     TEXT_COLOUR_RED     CHANGE TEXT COLOUR TO RED
00003242                           319      
00003242  43F9 0000369C            320      LEA     INVALID_INPUT,A1    STORE STRING ADDRESS IN A1
00003248  103C 000E                321      MOVE.B  #14,D0              DISPLAY STRING ASKING FOR VALID USER INPUT
0000324C  4E4F                     322      TRAP    #15
0000324E                           323      
0000324E  6100 00E4                324      BSR     TEXT_COLOUR_WHITE   CHANGE TEXT COLOUR BACK TO WHITE
00003252                           325      
00003252  6100 009A                326      BSR     DECORATE
00003256                           327  
00003256  6100 FEAE                328      BSR     GAMEPLAY
0000325A                           329  *-------------------------------------------------------
0000325A                           330  *-----------------------BEING ATTACKED------------------
0000325A                           331  * THIS COULD BE USED FOR COLLISION DETECTION
0000325A                           332  *-------------------------------------------------------
0000325A                           333  COLLISION:
0000325A  123C 0064                334      MOVE.B  #MINE_LOC,D1
0000325E  B27C 0064                335      CMP     #100,D1           IS( X == 100)?
00003262  6600 0020                336      BNE     COLLISION_MISS    IF X IS EQUAL TO 100, THEN HIT
00003266                           337  COLLISION_HIT:
00003266                           338      *HIT
00003266  6100 00BE                339      BSR     TEXT_COLOUR_GREEN
0000326A                           340      
0000326A  43F9 000035B9            341      LEA     HIT_MSG,A1        LOAD STRIKE MESSAGE
00003270  303C 000E                342      MOVE    #14,D0            TRAP TASK 14
00003274  4E4F                     343      TRAP    #15
00003276                           344      
00003276  1E14                     345      MOVE.B  (A4),D7           GET RABBIT'S HEALTH VALUE FROM ADRESS REGISTER 4 AND STORE IN D7
00003278  0407 000A                346      SUB.B   #$A,D7            SUBTRACT 10 HEALTH (A IN HEX) FROM RABBIT'S HEALTH VALUE IN D7
0000327C  1887                     347      MOVE.B  D7,(A4)           SET NEW HEALTH VALUE IN MEMORY ADRESS STORED IN A7
0000327E                           348      
0000327E  6100 00B4                349      BSR     TEXT_COLOUR_WHITE
00003282                           350      
00003282  4E75                     351      RTS
00003284                           352      
00003284                           353  COLLISION_MISS:
00003284                           354      *MISS
00003284  43F9 000035C1            355      LEA     MISS_MSG,A1       STORE STRING ADRESS IN A1
0000328A  303C 000E                356      MOVE    #14,D0            TRAP TASK 14
0000328E  4E4F                     357      TRAP    #15
00003290  4E75                     358      RTS
00003292                           359  
00003292                           360  *-------------------------------------------------------
00003292                           361  *--------------------------RABBIT-----------------------
00003292                           362  *-------------------------------------------------------
00003292                           363  RABBIT_ATTACKS:
00003292  6100 0084                364      BSR     TEXT_COLOUR_RED
00003296                           365      
00003296  43F9 000034CF            366      LEA     RABBITSUCCESFULATTACK_MSG,A1    LOAD MESSAGE
0000329C  103C 000E                367      MOVE.B  #14,D0                          TRAP TASK 14
000032A0  4E4F                     368      TRAP    #15                             EXECUTE
000032A2                           369      
000032A2  6100 0090                370      BSR     TEXT_COLOUR_WHITE
000032A6                           371      
000032A6  0444 000A                372      SUB     #$A,D4            SUBTRACT 10 (A IN HEX) FROM 100 (64 IN HEX) IN  DATA REGISTER 1
000032AA  11C4 4003                373      MOVE.B  D4,$4003          PLACE NEW HEALTH IN MEMORY ADRESS 4003
000032AE                           374      
000032AE  4E75                     375      RTS
000032B0                           376  
000032B0                           377  RABBIT_FAILS_ATTACK:
000032B0  6100 0090                378      BSR     TEXT_COLOUR_GREY
000032B4                           379      
000032B4  43F9 000034F8            380      LEA     RABBITFAILATTACK_MSG,A1         STORE STRING ADRESS IN A1
000032BA  103C 000E                381      MOVE.B  #14,D0                          DISPLAY STRING WITH TRAP TASK 14
000032BE  4E4F                     382      TRAP    #15                             EXECUTE
000032C0                           383      
000032C0  6100 0072                384      BSR     TEXT_COLOUR_WHITE
000032C4                           385      
000032C4  4E75                     386      RTS
000032C6                           387  
000032C6                           388  RABBIT_HEALTH:
000032C6  43F9 00003641            389      LEA     RABBIT_HEALTH_MSG,A1            LOAD MESSAGE
000032CC  103C 000E                390      MOVE.B  #14,D0                          TRAP TASK 14
000032D0  4E4F                     391      TRAP    #15                             EXECUTE
000032D2                           392      
000032D2  1207                     393      MOVE.B  D7,D1       MOVE RABBIT'S HEALTH VALUE TO D1
000032D4  103C 0003                394      MOVE.B  #3,D0       MOVE LITERAL 3 TO D0
000032D8  4E4F                     395      TRAP    #15         INTREPRET VALUE IN D0, WHICH IS 3 SO DISPLAYS D1
000032DA                           396  *-------------------------------------------------------
000032DA                           397  *--------------------------LOOP-------------------------
000032DA                           398  *-------------------------------------------------------
000032DA                           399  LOOP:
000032DA  163C 0005                400      MOVE.B  #5, D3 LOOP COUNTER D3=5
000032DE                           401  NEXT:
000032DE  43F9 000035F9            402      LEA     LOOP_MSG,A1
000032E4  103C 000E                403      MOVE.B  #14,D0
000032E8  4E4F                     404      TRAP    #15
000032EA  5343                     405      SUB     #1,D3   DECREMENT LOOP COUNTER
000032EC  66F0                     406      BNE     NEXT    REPEAT UNTIL D0=0
000032EE                           407  
000032EE                           408  *-------------------------------------------------------
000032EE                           409  *------------------SCREEN DECORATION--------------------
000032EE                           410  *-------------------------------------------------------
000032EE                           411  DECORATE:
000032EE  163C 003C                412      MOVE.B  #60, D3
000032F2  6100 007E                413      BSR     ENDL
000032F6                           414  OUT:
000032F6  43F9 000035F9            415      LEA     LOOP_MSG,A1
000032FC  103C 000E                416      MOVE.B  #14,D0
00003300  4E4F                     417      TRAP    #15
00003302  5343                     418      SUB     #1,D3                           DECREMENT LOOP COUNTER
00003304  66F0                     419      BNE     OUT                             REPEAT UNTIL D0=0
00003306  6100 006A                420      BSR     ENDL
0000330A  4E75                     421      RTS
0000330C                           422      
0000330C                           423  CLEAR_SCREEN: 
0000330C  103C 000B                424      MOVE.B  #11,D0                          CLEAR SCREEN
00003310  323C FF00                425      MOVE.W  #$FF00,D1
00003314  4E4F                     426      TRAP    #15
00003316  4E75                     427      RTS
00003318                           428      
00003318                           429  TEXT_COLOUR_RED:
00003318  223C 000000FF            430      MOVE.l  #$0000FF,D1                     SET TEXT COLOUR TO RED
0000331E  303C 0015                431      MOVE    #21,D0                          TRAP TASK 21
00003322  4E4F                     432      TRAP    #15                             EXECUTE
00003324  4E75                     433      RTS
00003326                           434  
00003326                           435  TEXT_COLOUR_GREEN:
00003326  223C 0000FF00            436      MOVE.l  #$00FF00,D1                     SET FONT COLOUR TO GREEN
0000332C  303C 0015                437      MOVE    #21,D0                          TRAP TASK 21
00003330  4E4F                     438      TRAP    #15
00003332  4E75                     439      RTS
00003334                           440      
00003334                           441  TEXT_COLOUR_WHITE:
00003334  223C 00FFFFFF            442      MOVE.l  #$FFFFFF,D1                     SET COLOUR BACK TO WHITE
0000333A  303C 0015                443      MOVE    #21,D0                          TRAP TASK 21
0000333E  4E4F                     444      TRAP    #15                             EXECUTE
00003340  4E75                     445      RTS
00003342                           446  TEXT_COLOUR_GREY:
00003342  223C 00666666            447      MOVE.l  #$666666,D1                     SET COLOUR BACK TO GREY
00003348  303C 0015                448      MOVE    #21,D0                          TRAP TASK 21
0000334C  4E4F                     449      TRAP    #15                             EXECUTE
0000334E  4E75                     450      RTS
00003350                           451  *-------------------------------------------------------
00003350                           452  *------------------------REPLAY-------------------------
00003350                           453  *----------------REPLAY DOESNT WORK---------------------
00003350                           454  REPLAY:                
00003350  6100 0020                455      BSR     ENDL        
00003354  43F9 000035FB            456      LEA     REPLAY_MSG,A1
0000335A  103C 000E                457      MOVE.B  #14,D0
0000335E  4E4F                     458      TRAP    #15
00003360                           459      
00003360  103C 0004                460      MOVE.B  #4,D0
00003364  4E4F                     461      TRAP    #15
00003366                           462  
00003366  B27C 0000                463      CMP     #EXIT,D1
0000336A  6700 FC9A                464      BEQ     END         IF SR Z REGISTER CONTAINS 1 BEQ => BRANCH EQUALS
0000336E  6100 DC90                465      BSR     START
00003372                           466  
00003372                           467  ENDL:
00003372  48E7 8040                468      MOVEM.L D0/A1,-(A7)
00003376  303C 000E                469      MOVE    #14,D0
0000337A  43F9 000033BC            470      LEA     CRLF,A1
00003380  4E4F                     471      TRAP    #15
00003382  4CDF 0201                472      MOVEM.L (A7)+,D0/A1
00003386  4E75                     473      RTS
00003388                           474  *-------------------------------------------------------
00003388                           475  *------------------------PROCESS HEALTH-----------------
00003388                           476  *CHECK IF ANY OF THE ENTITIES ARE DEFEATED--------------
00003388                           477  CHECK_IF_DEFEATED:
00003388  1A14                     478          MOVE.B  (A4),D5                 MOVE RABBIT'S HEALTH VALUE TO D5
0000338A  BA7C 0000                479          CMP     #0,D5                   COMPARE 0 TO RABBIT'S HEALTH
0000338E  6700 0010                480          BEQ     RABBIT_DEFEATED         IF EQUAL THEN RABBIT HAS BEEN DEFEATED
00003392                           481      
00003392  1A38 4003                482          MOVE.B  $4003,D5                MOVE PLAYER'S HEALTH VALUE FROM MEMORY ADRESS TO D5
00003396  BA7C 0000                483          CMP     #0,D5                   COMPARE 0 TO PLAYER'S HEALTH VALUE
0000339A  6700 0012                484          BEQ     PLAYER_DEFEATED         IF EQUAL , PLAYER HAS BEEN DEFEATED
0000339E                           485          
0000339E  4E75                     486          RTS
000033A0                           487  RABBIT_DEFEATED:
000033A0                           488  
000033A0  43F9 000036FD            489          LEA     RABBIT_DEFEATED_MSG,A1  LOAD STRING ADDRESS IN A1
000033A6  103C 000E                490          MOVE.B  #14,D0                  DISPLAY STRING
000033AA  4E4F                     491          TRAP    #15
000033AC                           492          
000033AC  61A2                     493          BSR     REPLAY                  
000033AE                           494  PLAYER_DEFEATED:
000033AE                           495  
000033AE  43F9 000036E6            496          LEA     PLAYER_DEFEATED_MSG,A1  LOAD STRING ADDRESS IN A1
000033B4  103C 000E                497          MOVE.B  #14,D0                  DISPLAY STRING
000033B8  4E4F                     498          TRAP    #15
000033BA                           499          
000033BA  6194                     500          BSR     REPLAY
000033BC                           501  *-------------------------------------------------------
000033BC                           502  *-------------------DATA DELARATIONS--------------------
000033BC                           503  *-------------------------------------------------------
000033BC                           504  
000033BC= 0D 0A 00                 505  CRLF:           DC.B    $0D,$0A,0
000033BF= 2A 2A 2A 2A 2A 2A ...    506  WELCOME_MSG:    DC.B    '************************************************************'
000033FB= 0D 0A                    507                  DC.B    $0D,$0A
000033FD= 20 20 20 20 20 20 ...    508                  DC.B    '                   WARRIOR ON A RAMPAGE'
00003424= 0D 0A                    509                  DC.B    $0D,$0A
00003426= 2A 2A 2A 2A 2A 2A ...    510                  DC.B    '************************************************************'
00003462= 0D 0A 00                 511                  DC.B    $0D,$0A,0
00003465= 50 4F 54 49 4F 4E ...    512  POTION_MSG:     DC.B    'POTION ....'
00003470= 0D 0A                    513                  DC.B    $0D,$0A
00003472= 45 4E 54 45 52 20 ...    514                  DC.B    'ENTER POTION : ',0
00003482= 4E 55 4D 42 45 52 ...    515  POTIONS_MSG:    DC.B    'NUMBER OF POTIONS : ',0
00003497= 45 4E 54 45 52 20 ...    516  WEAPONS_MSG:    DC.B    'ENTER 1 FOR SPEER || ENTER 2 FOR SWORD'
000034BD= 0D 0A                    517                  DC.B    $0D,$0A
000034BF= 43 48 4F 4F 53 45 ...    518                  DC.B    'CHOOSE WEAPON: ',0
000034CF                           519                  
000034CF                           520           *RABBIT MESSAGES
000034CF= 52 41 42 42 49 54 ...    521  RABBITSUCCESFULATTACK_MSG:      DC.B    'RABBIT BITES YOU AND YOU LOOSE 10 HEALTH',0
000034F8= 52 41 42 42 49 54 ...    522  RABBITFAILATTACK_MSG:           DC.B    'RABBIT BITES YOU BUY YOU SHIELDED , NO HEALTH LOST',0
0000352B= 59 4F 55 20 48 41 ...    523  GAMEPLAY_MSG:            DC.B    'YOU HAVE ENCOUNTERED "ANGRY RABBIT"'
0000354E= 0D 0A                    524                           DC.B    $0D,$0A
00003550= 45 4E 54 45 52 20 ...    525                           DC.B    'ENTER "1" TO ATTACK || ENTER "2" TO SHIELD || ENTER "3" TO USE POTION:  ',0
00003599                           526                  
00003599                           527           *GAME PLAY MESSAGES
00003599= 55 50 44 41 54 45 ...    528  UPDATE_MSG:              DC.B    'UPDATE GAMEPLAY !',0
000035AB= 44 52 41 57 20 53 ...    529  DRAW_MSG:                DC.B    'DRAW SCREEN !',0
000035B9= 53 54 52 49 4B 45 ...    530  HIT_MSG:                 DC.B    'STRIKE!',0
000035C1= 4D 49 53 53 21 00        531  MISS_MSG:                DC.B    'MISS!',0
000035C7= 53 48 49 45 4C 44 ...    532  SHIELD_MSG:              DC.B    'SHIELD!',0
000035CF= 55 53 45 44 20 50 ...    533  USE_POTION_MSG           DC.B    'USED POTION, GAINED BACK 30 HEALTH!',0
000035F3= 48 45 41 4C 21 00        534  HEAL_MSG:                DC.B    'HEAL!',0
000035F9= 2E 00                    535  LOOP_MSG:                DC.B    '.',0
000035FB= 45 4E 54 45 52 20 ...    536  REPLAY_MSG:              DC.B    'ENTER 0 TO QUIT ANY OTHER NUMBER TO REPLAY : ',0
00003629= 50 4C 41 59 45 52 ...    537  HUD_MSG_HEALTH:          DC.B    'PLAYER HEALTH: ',0
00003639= 53 43 4F 52 45 3A ...    538  HUD_MSG_SCORE:           DC.B    'SCORE: ',0
00003641= 52 41 42 42 49 54 ...    539  RABBIT_HEALTH_MSG:       DC.B    'RABBIT HEALTH: ',0
00003651= 57 4F 55 4C 44 20 ...    540  SHOP_MSG:                DC.B    'WOULD YOU LIKE TO BUY POTIONS?'
0000366F= 0D 0A                    541                           DC.B    $0D,$0A
00003671= 45 4E 54 45 52 20 ...    542                           DC.B    'ENTER "1" IF YES , ANY OTHER NUMBER FOR NO',0
0000369C= 45 4E 54 45 52 20 ...    543  INVALID_INPUT:           DC.B    'ENTER A VALID NUMBER',0
000036B1= 50 4F 54 49 4F 4E ...    544  POTIONS_AMOUNT_MSG       DC.B    'POTIONS LEFT: ',0
000036C0= 4E 4F 20 50 4F 54 ...    545  NO_POTIONS_LEFT_MSG      DC.B    'NO POTIONS LEFT',0
000036D0                           546  
000036D0= 41 4C 52 45 41 44 ...    547  MAX_HEALTH_MSG           DC.B    'ALREADY AT MAX HEALTH',0
000036E6= 59 4F 55 20 48 41 ...    548  PLAYER_DEFEATED_MSG      DC.B    'YOU HAVE BEEN DEFEATED',0
000036FD= 54 48 45 20 43 52 ...    549  RABBIT_DEFEATED_MSG      DC.B    'THE CRAZY RABBIT HAS BEEN DEFEATED!',0
00003721                           550           *PLAYER AND ENEMY VARIABLES
00003722                           551  HEALTH:                  DS.W    1   PLAYERS HEALTH
00003724                           552  
00003724                           553  RABBITHEALTH:            DS.W    1   RABBITS HEALTH
00003726                           554  
00003726                           555  SCORE:                   DS.W    1   RESERVE SPACE FOR SCORE
00003728                           556  
00003728                           557  XP:                      DS.W    1   RESERVE SPACE FOR EXPERIENCE POINTS
0000372A                           558  
0000372A                           559      END START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
AT_MAX_HEALTH       30E4
CHECK_IF_DEFEATED   3388
CLEAR_SCREEN        330C
COLLISION           325A
COLLISION_HIT       3266
COLLISION_MISS      3284
CRLF                33BC
DECORATE            32EE
DRAW                3088
DRAW_MSG            35AB
END                 3006
ENDL                3372
ENTER_VALID_INPUT   323A
EXIT                0
GAME                3000
GAMELOOP            3058
GAMEPLAY            3106
GAMEPLAY_MSG        352B
HEALTH              3722
HEAL_MSG            35F3
HIT_MSG             35B9
HUD                 31EC
HUD_MSG_HEALTH      3629
HUD_MSG_SCORE       3639
INPUT               3052
INVALID_INPUT       369C
LOOP                32DA
LOOP_MSG            35F9
LOSE_POINT          8
MAX_HEALTH_MSG      36D0
MAX_POTIONS         9
MAX_WEAPONS         3
MINE_LOC            64
MIN_POTIONS         1
MIN_WEAPONS         1
MISS_MSG            35C1
NEXT                32DE
NO_POTIONS_LEFT     30C2
NO_POTIONS_LEFT_MSG  36C0
OUT                 32F6
PLAYER_ATTACK       3160
PLAYER_DEFEATED     33AE
PLAYER_DEFEATED_MSG  36E6
PLAYER_SHIELD       3178
PLAYER_USE_POTION   31A0
POTIONS             3092
POTIONS_AMOUNT_MSG  36B1
POTIONS_MSG         3482
POTION_MSG          3465
RABBITFAILATTACK_MSG  34F8
RABBITHEALTH        3724
RABBITSUCCESFULATTACK_MSG  34CF
RABBIT_ATTACKS      3292
RABBIT_DEFEATED     33A0
RABBIT_DEFEATED_MSG  36FD
RABBIT_FAILS_ATTACK  32B0
RABBIT_HEALTH       32C6
RABBIT_HEALTH_MSG   3641
REPLAY              3350
REPLAY_MSG          35FB
SCORE               3726
SHIELD_MSG          35C7
SHOP_MSG            3651
START               1000
TEXT_COLOUR_GREEN   3326
TEXT_COLOUR_GREY    3342
TEXT_COLOUR_RED     3318
TEXT_COLOUR_WHITE   3334
UPDATE              3082
UPDATE_MSG          3599
USE_POTION_MSG      35CF
WEAPONS_MSG         3497
WELCOME             300A
WELCOME_MSG         33BF
WIN_POINT           5
XP                  3728
